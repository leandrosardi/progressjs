progressJs = {
    // array of error reports
    myXhr: [],
    // start sequence of AJAX calls
    start: function(conf) {
        if (conf['method'] != 'GET' && conf['method'] != 'get') {
            console.log('Progress.js: only GET method is supported');
            return;
        }
        var length = conf['datas'].length;
        function submitData(j) {
            progressJs.total_calls++;
            var data = conf['datas'][j]
            var request = $.ajax({
                method: conf['method'],
                url: conf['url'],
                dataType: 'json',
                contentType: 'application/json',
                data: data,
                success: function(response) {
                    progressJs.success_calls++;
                    conf['success'](j, data, response);
                    // call the next request in the sequence
                    if (j+1 < length) { setTimeout(() => { submitData(j+1) }, conf.delay_between_calls); }
                },
                error: function(jqXHR, exception) {
                    progressJs.error_calls++;
                    conf['error'](j, data, jqXHR);
                    // call the next request in the sequence
                    if (j+1 < length) { setTimeout(() => { submitData(j+1) }, conf.delay_between_calls); }
                },
            }).done(function(msg) {
                conf['done'](msg);
            });
            progressJs.myXhr.push(request);
        }
        submitData(0);
    },

    cancel: function(handler) {
        handler.abort(handler);
    },

    count: function(handler) {
        return handler.length;
    },

    completed: function(handler = null) {
        var count = 0;
        $.each(handler, function(key, value) {
            if (value.status == 200)
                count++;
        });
        return count;
    },

    failed: function(handler) {
        var count = 0;
        $.each(handler, function(key, value) {
            if (value.status != 200)
                count++;
        });
        return count;
    },
};